using Atk.DataPortal;
using Atk.DataPortal.Core;
using Atk.DataPortal.UiServer;
using Autofac;
using System;
using System.ComponentModel.DataAnnotations;
using <$Ai_Project_NameSpace>.BLL.<$Ai_ProjectName>;

// <$Ai_Object_ChineseName> UI的Dto类
namespace <$Ai_Project_NameSpace>.UIServer.<$Ai_ProjectName>
{
    /// <summary>
    /// <$Ai_Object_ChineseName>   UI的Dto类
    /// </summary>
    public  class  <$Ai_Bll_ClassName>WebDto:BaseUIDto<<$Ai_Bll_ClassName>WebDto,<$Ai_Bll_ClassName>Entity>, IComparable<<$Ai_Bll_ClassName>WebDto>
    {
        #region  属性定义
        /// <summary>
        /// 中文名称
        /// </summary>
        [ScaffoldColumn(false)]
        public static string DisplayDescription { get; set; }
	
        <$Ai_Class_Property_List_WithAttribute> 

        #endregion

        #region 构造方法

        /// <summary>
        /// <$Ai_Object_ChineseName> 构造方法
        /// </summary>
        public  <$Ai_Bll_ClassName>WebDto(ILifetimeScope lc): base()
        {
            _lc = lc;
            Power = new Power();
            Op = RecordOperater.Updata;
            DisplayDescription = "<$Ai_Object_ChineseName>"; 
	    <$Ai_Default_Value_Create>
        }

	/// <summary>
        /// <$Ai_Object_ChineseName> 构造方法
        /// </summary>
        public  <$Ai_Bll_ClassName>WebDto(): base()
        {
            Power = new Power();
            Op = RecordOperater.Updata;
            DisplayDescription = "<$Ai_Object_ChineseName>"; 
	    <$Ai_Default_Value_Create>
        }
	#endregion

	#region  属性拷贝
	
	/// <summary>
        /// 由BLL类型转换成UI的Dto类型
        /// </summary>
        /// <param name="item">BLL类型</param>
	public override <$Ai_Bll_ClassName>WebDto CopyToOut(<$Ai_Bll_ClassName>Entity item)
        {
            <$Ai_BLLClass_To_UIDto>
	    this.SetAccessAddress(item.AccessAddress);
            this.SetAccessPath(item.AccessPath);
            return this;
        }

	/// <summary>
        /// 由Dto类型转换成BLL类型进行保存操作
        /// </summary>
        /// <param name="item">UI的Dto类型</param>
	public override <$Ai_Bll_ClassName>Entity CopyToIn()
        {
		var data =_lc.Resolve<<$Ai_Bll_ClassName>Entity>();
		<$Ai_UiDto_To_BLLClass>
		return data;
        }

        /// <summary>
        /// josn对象拷贝
        /// </summary>
        /// <returns></returns>
        public override object JsonCopy()
        {
            return new
            {
                <$Ai_UiDto_To_JosnClass>
                #region  类权限赋值
                AtkCheck = this.Power.Check,
                AtkCreate = this.Power.Create,
                AtkDelete = this.Power.Delete,
                AtkEdit = this.Power.Edit,
                AtkExport = this.Power.Export,
                AtkExportIn = this.Power.ExportIn,
                AtkGet = this.Power.Get,
                AtkReport = this.Power.Report
                #endregion
            };
        }

        /// <summary>
        /// 记录相同比较，用于批更新时，重复项目检查
        /// </summary>
        /// <param name="other">另一记录</param>
        /// <returns>相同返回为 0</returns>
        public override int CompareTo(<$Ai_Bll_ClassName>WebDto other)
        {
            if (other == null) return 1;
            if (<$Ai_KeyField_CompareTo_if>)
                return 0;
            else return 1;

        }
       	#endregion
    }


  }
